{"ast":null,"code":"var _jsxFileName = \"/home/vscalcione/tvmaze-react/react-tvmaze/src/components/TVMazeResults.tsx\";\nimport React from 'react';\nimport css from '../App.module.css';\nimport { NoImage } from '../App';\n\nconst itemClickHandler = series => {\n  window.open(series.show.url);\n};\n\nexport const TVMazeResults = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.result.length, \" results\", /*#__PURE__*/React.createElement(\"div\", {\n    className: css.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, props.result.map(series => {\n    const {\n      show: {\n        id,\n        image,\n        name\n      }\n    } = series; // @ts-ignore\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: id,\n      className: css.gridItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: css.movie,\n      onClick: () => itemClickHandler(series),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }\n    }, image ? /*#__PURE__*/React.createElement(\"img\", {\n      src: image === null || image === void 0 ? void 0 : image.medium,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 37\n      }\n    }) : /*#__PURE__*/React.createElement(NoImage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: css.movieText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }, name)));\n  })));\n};","map":{"version":3,"sources":["/home/vscalcione/tvmaze-react/react-tvmaze/src/components/TVMazeResults.tsx"],"names":["React","css","NoImage","itemClickHandler","series","window","open","show","url","TVMazeResults","props","result","length","grid","map","id","image","name","gridItem","movie","medium","movieText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAASC,OAAT,QAAwB,QAAxB;;AAOA,MAAMC,gBAAgB,GAAIC,MAAD,IAAqB;AAC1CC,EAAAA,MAAM,CAACC,IAAP,CAAYF,MAAM,CAACG,IAAP,CAAYC,GAAxB;AACH,CAFD;;AAKA,OAAO,MAAMC,aAA2C,GAAIC,KAAD,IAAW;AAClE,sBAAO,0CACFA,KAAK,CAACC,MAAN,CAAaC,MADX,2BAEH;AAAK,IAAA,SAAS,EAAEX,GAAG,CAACY,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQH,KAAK,CAACC,MAAN,CAAaG,GAAb,CAAkBV,MAAD,IAAY;AACzB,UAAM;AAAEG,MAAAA,IAAI,EAAE;AAAEQ,QAAAA,EAAF;AAAMC,QAAAA,KAAN;AAAaC,QAAAA;AAAb;AAAR,QAA+Bb,MAArC,CADyB,CAEzB;;AACA,wBAAO;AAAK,MAAA,GAAG,EAAEW,EAAV;AAAc,MAAA,SAAS,EAAEd,GAAG,CAACiB,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH;AAAK,MAAA,SAAS,EAAEjB,GAAG,CAACkB,KAApB;AAA2B,MAAA,OAAO,EAAE,MAAMhB,gBAAgB,CAACC,MAAD,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIY,KAAK,gBAAG;AAAK,MAAA,GAAG,EAAEA,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEI,MAAjB;AAAyB,MAAA,GAAG,EAAC,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,gBACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAKA;AAAK,MAAA,SAAS,EAAEnB,GAAG,CAACoB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCJ,IAAhC,CALA,CADG,CAAP;AAUH,GAbD,CAFR,CAFG,CAAP;AAqBH,CAtBM","sourcesContent":["import React from 'react';\nimport css from '../App.module.css'\nimport { NoImage } from '../App'\nimport { Series } from '../model/series-tv';\n\nexport interface TVMazeResultsProps {\n    result: Series[];\n}\n\nconst itemClickHandler = (series : Series) => {\n    window.open(series.show.url);\n};\n\n\nexport const TVMazeResults: React.FC<TVMazeResultsProps> = (props) => {\n    return <>\n        {props.result.length} results\n        <div className={css.grid}>\n            {\n                props.result.map((series) => {\n                    const { show: { id, image, name }} = series;\n                    // @ts-ignore\n                    return <div key={id} className={css.gridItem}>\n                        <div className={css.movie} onClick={() => itemClickHandler(series)}>\n                        {\n                            image ? <img src={image?.medium} alt=\"\" /> :\n                            <NoImage></NoImage>\n                        }\n                        <div className={css.movieText}>{name}</div>\n                        </div>\n                    </div>\n\n                })\n            }\n        </div>\n    </>\n}"]},"metadata":{},"sourceType":"module"}