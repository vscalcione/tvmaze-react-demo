{"ast":null,"code":"import { useState } from \"react\";\nimport Axios from \"axios\";\nexport function useTVMaze() {\n  const [details, setDetails] = useState(null);\n\n  const closeModal = () => {\n    setDetails(null);\n  };\n\n  const [result, setResult] = useState([]);\n\n  const searchHandler = text => {\n    Axios.get(`http://api.tvmaze.com/search/shows?q=${text}`).then(res => setResult(res.data));\n  };\n\n  const itemClickHandler = series => {\n    window.open(series.show.url);\n  };\n\n  return {\n    series: result,\n    search: searchHandler,\n    itemClick: itemClickHandler\n  };\n}","map":{"version":3,"sources":["/home/vscalcione/tvmaze-react/react-tvmaze/src/hooks/useTVMaze.tsx"],"names":["useState","Axios","useTVMaze","details","setDetails","closeModal","result","setResult","searchHandler","text","get","then","res","data","itemClickHandler","series","window","open","show","url","search","itemClick"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,OAAvB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,SAAT,GAAsB;AAEzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAc,IAAd,CAAtC;;AAEA,QAAMK,UAAU,GAAG,MAAM;AACrBD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAFD;;AAIA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAW,EAAX,CAApC;;AAEA,QAAMQ,aAAa,GAAIC,IAAD,IAAkB;AACpCR,IAAAA,KAAK,CAACS,GAAN,CAAW,wCAAuCD,IAAK,EAAvD,EAA0DE,IAA1D,CAA+DC,GAAG,IAAIL,SAAS,CAACK,GAAG,CAACC,IAAL,CAA/E;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAIC,MAAD,IAAoB;AACzCC,IAAAA,MAAM,CAACC,IAAP,CAAYF,MAAM,CAACG,IAAP,CAAYC,GAAxB;AACH,GAFD;;AAIA,SAAO;AACHJ,IAAAA,MAAM,EAAET,MADL;AAEHc,IAAAA,MAAM,EAAEZ,aAFL;AAGHa,IAAAA,SAAS,EAAEP;AAHR,GAAP;AAKH","sourcesContent":["import {useState} from \"react\";\nimport {Series, Show} from \"../model/series-tv\";\nimport Axios from \"axios\";\n\nexport function useTVMaze()  {\n\n    const [details, setDetails] = useState<Show | null>(null);\n\n    const closeModal = () => {\n        setDetails(null);\n    }\n\n    const [result, setResult] = useState<Series[]>([]);\n\n    const searchHandler = (text: string) => {\n        Axios.get(`http://api.tvmaze.com/search/shows?q=${text}`).then(res => setResult(res.data));\n    };\n\n    const itemClickHandler = (series: Series) => {\n        window.open(series.show.url);\n    };\n\n    return {\n        series: result,\n        search: searchHandler,\n        itemClick: itemClickHandler,\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}